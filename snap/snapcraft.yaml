name: x16emu
base: core18 # the base snap is the execution environment for this snap
adopt-info: x16-emulator
summary: Commander X16 Emulator
description: |
  This is an emulator for the Commander X16 computer system. 

grade: stable
confinement: strict

parts:
  cc65:
    source: https://github.com/cc65/cc65.git
    source-tag: "V2.18"
    plugin: make
    override-build: |
      make bin USER_CFLAGS=-Werror PREFIX=$SNAPCRAFT_PART_INSTALL
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      install bin/* $SNAPCRAFT_PART_INSTALL/bin/
  x16-roms:
    after: [cc65]
    plugin: make
    source: https://github.com/commanderx16/x16-rom.git
    override-pull: |
      snapcraftctl pull
      last_committed_tag="$(git describe --tags --abbrev=0)"
      echo $last_committed_tag
      last_released_tag="$(snap info $SNAPCRAFT_PROJECT_NAME | awk '$1 == "latest/beta:" { print $2 }')"
      echo $last_released_tag
      # If the latest tag from the upstream project has not been released to
      # beta, build that tag instead of master.
      if [ "${last_committed_tag}" != "${last_released_tag}" ]; then
        git fetch
        git checkout "${last_committed_tag}"
      fi
    override-build: |
      make
      install build/x16/rom.bin $SNAPCRAFT_PART_INSTALL/
  x16-emulator:
    after: [x16-roms, alsa-mixin]
    plugin: make
    source: https://github.com/commanderx16/x16-emulator.git
    build-packages:
      - libsdl2-dev
      - git
    override-pull: |
      snapcraftctl pull
      last_committed_tag="$(git describe --tags --abbrev=0)"
      echo $last_committed_tag
      last_released_tag="$(snap info $SNAPCRAFT_PROJECT_NAME | awk '$1 == "latest/beta:" { print $2 }')"
      echo $last_released_tag
      # If the latest tag from the upstream project has not been released to
      # beta, build that tag instead of master.
      if [ "${last_committed_tag}" != "${last_released_tag}" ]; then
        git fetch
        git checkout "${last_committed_tag}"
        echo "Setting version to $last_committed_tag"
        snapcraftctl set-version "${last_committed_tag}"
      else
        echo "Setting version to $(git rev-parse --short HEAD)"
        snapcraftctl set-version "$(git rev-parse --short HEAD)"
      fi
    override-build: |
      make
      cp x16emu $SNAPCRAFT_PART_INSTALL
    stage-packages:
      - libasound2
      - libasyncns0
      - libflac8
      - libogg0
      - libpulse0
      - libsdl2-2.0-0
      - libsndfile1
      - libsndio6.1
      - libvorbis0a
      - libvorbisenc2
      - libwayland-client0
      - libwayland-cursor0
      - libwayland-egl1
      - libx11-6
      - libxau6
      - libxcb1
      - libxcursor1
      - libxdmcp6
      - libxext6
      - libxfixes3
      - libxi6
      - libxinerama1
      - libxkbcommon0
      - libxrandr2
      - libxrender1
      - libxss1
      - libxxf86vm1
  alsa-mixin:
    plugin: nil
    source: https://github.com/diddlesnaps/snapcraft-alsa.git
    override-pull: |
      cat > asound.conf <<EOF
      pcm.!default {
          type pulse
          fallback "sysdefault"
          hint {
              show on
              description "Default ALSA Output (currently PulseAudio Sound Server)"
          }
      }
      ctl.!default {
          type pulse
          fallback "sysdefault"
      }
      seq.default {
          type hw
      }
      seq.hw {
          type hw
      }
      EOF
      cat > alsa-launch <<EOF
      #!/bin/bash
      export ALSA_CONFIG_PATH="\$SNAP/etc/asound.conf"
      if [ -d "\$SNAP/usr/lib/alsa-lib" ]; then
          export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:\$SNAP/usr/lib/alsa-lib"
      elif [ -d "\$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib" ]; then
          export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:\$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib"
      fi
      export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:\$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio"
      # Make PulseAudio socket available inside the snap-specific \$XDG_RUNTIME_DIR
      if [ -n "\$XDG_RUNTIME_DIR" ]; then
          pulsenative="pulse/native"
          pulseaudio_sockpath="\$XDG_RUNTIME_DIR/../\$pulsenative"
          if [ -S "\$pulseaudio_sockpath" ]; then
              export PULSE_SERVER="unix:\${pulseaudio_sockpath}"
          fi
      fi
      exec "\$@"
      EOF
      chmod +x alsa-launch
    override-build: |
      snapcraftctl build
      install -m644 -D -t $SNAPCRAFT_PART_INSTALL/etc asound.conf
      install -m755 -D -t $SNAPCRAFT_PART_INSTALL/snap/command-chain alsa-launch
    build-packages:
      - libasound2-dev
    stage-packages:
      - libasound2
      - libasound2-plugins

layout:
  /usr/share/alsa:
    bind: $SNAP/usr/share/alsa

apps:
  x16emu:
    command: x16emu -rom $SNAP/rom.bin
    environment:
      LD_LIBRARY_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio:$LD_LIBRARY_PATH"
      ALSA_CONFIG_PATH: /snap/$SNAPCRAFT_PROJECT_NAME/current/usr/share/alsa
    command-chain: ["snap/command-chain/alsa-launch"]
    plugs:
      - alsa
      - joystick
      - x11
      - opengl
      - audio-playback
      - network
      - network-bind
      - home
      - removable-media
      - wayland
